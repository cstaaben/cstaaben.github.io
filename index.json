[{"content":"\u003ch2 id=\"inspiration\"\u003eInspiration\u003c/h2\u003e\n\u003cp\u003eI’ve always had an interest in text-based games. It’s always felt like these\ngames needed to be much more engaging than their graphically-gifted counterparts\nbecause there were fewer pretty things to look at. They had to engage your\nimagination, or at least your interest, to such an extent that you would\ncontinue to play. It originally started when I was learning that I was good at\nwriting (for a small town high school student), and only grew the more I started\nusing, and learning about, computers. Initially, it was just those text-based\nadventures that described the scene in the room you were in and presented you\nwith a list of options. Then, I discovered roguelikes. These were the some of\nthe most challenging and captivating games I had played and despite how\nfrustrated they would make me, I kept coming back. Life forced me to put things\non the back-burner for quite a while but now, secure enough in my career to\nstart prioritizing my own health and family over work, I am drawn back to this\ngenre with an experienced developer’s cant. These are new problems that I’ve not\nhad to solve and while they may not be terribly complex, they are new and\nintriguing in that they are a definitive shift away from what I have to solve in\nmy day-to-day.\u003c/p\u003e\n\u003ch2 id=\"plotting-the-course\"\u003ePlotting the course\u003c/h2\u003e\n\u003cp\u003eIn an evening of perusing the web for information about procedurally generated\nmazes and the various algorithms to find the route through said mazes, I\nstumbled upon \u003ca href=\"http://www.roguebasin.com/index.php/Main_Page\"\u003eRogueBasin\u003c/a\u003e and\nwhile reading through their articles on some of the major roguelikes, I\ndiscovered a series of\narticles: \u003ca href=\"http://rogueliketutorials.com/\"\u003eRoguelike Tutorials\u003c/a\u003e. I will be\nloosely following this series and doing my best to convert the Python to Go.\nI’ve\nfound \u003ca href=\"https://github.com/Joakker/tcod-go\"\u003ehttps://github.com/Joakker/tcod-go\u003c/a\u003e,\n“a wrapper of the libtcod library,” which I hope will be enough. Who knows,\nmaybe I’ll go down the rabbit hole of porting some of the tools from libtcod\ninto Go as part of this series, or a follow-up series.\u003c/p\u003e\n\u003cp\u003eA quick note before we dive in: the code for this project in its current state\ncan be found\nhere: \u003ca href=\"https://github.com/cstaaben/erebor\"\u003ehttps://github.com/cstaaben/erebor\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI decided to call my game Erebor, based on the dwarven mountain/fortress/city\nfrom J.R.R. Tolkien’s “The Hobbit.” Moria really seemed fascinating, and Angband\nwas already taken. Hopefully no fans of his work are going to metaphorically\ncrucify me for using The Lonely Mountain as my setting!\u003c/p\u003e\n\u003ch2 id=\"my-first-lesson\"\u003eMy first lesson\u003c/h2\u003e\n\u003cp\u003eNow, obviously, I wrote the above sections prior to actually starting the work.\nBut I didn’t feel they constituted a worthy introduction post and, at the time,\nI didn’t have much to add to flesh it out. My thought was to take notes and\nwrite this post as I developed the game. That approach lasted all the way until\nthe end of the first section for the roguelike tutorial.\u003c/p\u003e\n\u003cp\u003eAt first, I had some normal struggles: installing libtcod and SDL2 on a MacBook\nPro with an M1 Pro chip was a series of failed experiments until I built them\nfrom source, getting pkg-config to look in the right place to find those\npackages, translating the Python code and libtcod API calls into the Go library\nequivalents, and following a basic tutorial while organizing the code to allow\nme to build upon it without crazy amounts of refactoring in the future. But when\nI reached the first real functionality of the game (moving the character around\nthe screen), the weaknesses it the library become very apparent. I\u0026rsquo;m not sure\nwhat version of libtcod it was last compiled with and what’s changed since but\ngiven the lack of updates to that library, I can only assume they did not stay\nabreast of those changes. Unfortunately, updating what appears to be a mostly\nabandoned library does not fall under the umbrella of this series (nor do I have\nthe desire to learn that particular curve at this moment, sadly).\u003c/p\u003e\n\u003cp\u003eAfter some research, I’ve found recommendations to use other terminal libraries,\nor terminal emulators, written in pure Go or supporting Go bindings. I also did\nsome further digging into the roguelike “genre” (I use that term very loosely\nhere) and development process and realized something pretty major. I don’t want\nto just follow a tutorial and make something that tons of other people are\ncranking out. I want to make something new. It doesn’t have to be good or\nexciting or popular. But I want it to be new, and I want to do it right. I\u0026rsquo;m\nstill set on doing it in Go, but I’m more than likely going to be writing my own\ngeneration, pathfinding, and FOV algorithms. It’s a bit more than I initially\nexpected to undertake but I’m ok with that. I’ll still follow the tutorial but\nonly as a checklist, really, to ensure I spend time creating all the same things\nI would have if I used the libtcod library.\u003c/p\u003e\n\u003cp\u003eThis series may stretch much longer now and it may take me a long time to\nfinish. But I’m going to stick with it until I can release a finished product.\nI’m not going to guarantee that each post between now and that future completion\ndate will be about Erebor because I’ve got a marriage to maintain, and two kids\nto raise. Sometimes, I won’t have a lot of time to dedicate to the project. But\nI will continue to chip away at it in whatever way I can and post meaningful\nupdates as I do.\u003c/p\u003e\n","description":null,"image":null,"permalink":"https://cstaaben.github.io/blogs/roguelike_tutorial_part_0/","title":"Roguelike Tutorial - The beginning… and the end?"},{"content":"\u003cp\u003eWelcome to my simple little site. The posts I make here will contain code, links\nto code, and thoughts about code and technology. I\u0026rsquo;m not omniscient and I\ncertainly am not an expert in any field, so I\u0026rsquo;ve enabled comments on my posts to\nlet any readers comment on the posts to provide corrections\nor findings of their own. The best environment for working in tech is a\nlearning-friendly environment, I\u0026rsquo;ve found. To that end, I\u0026rsquo;d like to keep\nthe comments on this site troll, spam, and abuse free. I want to foster learning\nand conversation. Please stick to the following guidelines:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eBe polite - respect others and follow the \u0026ldquo;Golden Rule\u0026rdquo;. There are people on\nthe other side of the screen, and what is said here can affect them.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDon\u0026rsquo;t troll - I welcome criticisms of my thoughts, opinions, and code but if\nyour comments are inflammatory, add no value to the ongoing discussion, or are\ninsulting will be deleted without exception.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDon\u0026rsquo;t spam - I don\u0026rsquo;t expect this site to generate much traffic, so there\u0026rsquo;s not\nreally much point to spam my posts. Any comments deemed to be spam will be\ndeleted without exception.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo summarize: don\u0026rsquo;t be a jerk. This is a personal site, and is unaffiliated with\nany organization, company, or group. I really don\u0026rsquo;t want to\nremove comments from my posts, but I am willing to go that far. Don\u0026rsquo;t ruin it\nfor others who might actually want to participate in a discussion.\u003c/p\u003e\n","description":null,"image":null,"permalink":"https://cstaaben.github.io/blogs/comment_policy/","title":"Comment policy"},{"content":"\u003ch2 id=\"the-beginning\"\u003eThe beginning\u003c/h2\u003e\n\u003cp\u003eThis is the begining of what I\u0026rsquo;m striving to continue running for quite some time.\nMy initial reason for starting this was to hopefully get more interest from\npotential employers. After thinking about it some, I want to make it something\nmore. I want this to be a place for discussion about programming, game\ndevelopment, tech news, whatever. A learning environment. The world is full of\nnegativity, and if I can foster one little area of positivity, I will.\u003c/p\u003e\n\u003cp\u003eI also want to push myself. I was diagnosed with ADHD last year and I want to\npush myself to put coherent thoughts down and put them out where people can read\nand criticize them. I want to improve my technical writing skills (or maybe just\nlearn some of those). I want to write tutorials to help people learn, even if\nthere are hundreds of the same thing already out there. Maybe I\u0026rsquo;ll explain\nsomething slightly differently than someone else and it\u0026rsquo;ll click for someone.\u003c/p\u003e\n\u003cp\u003eWith that, here\u0026rsquo;s a brief introduction:\u003c/p\u003e\n\u003cp\u003eMy name is Corbin Staaben and, as of this writing, I am 30 years old. I enjoy\nreading, coding, and playing video games. I spend way too much money supporting\nnew and exciting tabletop RPGs and services for those games that I never really\nget to play. I work as a software engineer. I\u0026rsquo;ve been married for 10 years and\nhave two wonderfully rambunctious daughters. My ADHD has caused me to pick up\nand drop a plethora of hobbies and activities, and I\u0026rsquo;m hoping to make\nmaintaining this site and writing posts here stick.\u003c/p\u003e\n\u003ch2 id=\"the-plan\"\u003eThe plan\u003c/h2\u003e\n\u003cp\u003eI think my first thing to pursue is writing my own rogue-like. I\u0026rsquo;ve seen a\ncouple, and worked on a couple of similar projects, but I\u0026rsquo;ve never dived into\nthe deep end of procedurally generated content and taken a good, hard look at\ngame development. Initially, I think I\u0026rsquo;ll just follow a tutorial, probably for\nPython since I\u0026rsquo;m pretty familiar with that, and write it in Go. Each post will\ncontain things I learned, things I struggled with, and the end result of the\nprogress I made. Who knows, maybe by the end of it I\u0026rsquo;ll have an idea of what to\nwrite for my own tutorial series.\u003c/p\u003e\n\u003cp\u003eI would also like to pursue learning some GoDot (I think that\u0026rsquo;s what it\u0026rsquo;s\ncalled). A couple of work friends have published a game or two using it, and it\nsounds intriguing. I have had a project one of my college professors gave us\nstuck in my head for quite some time as a learning exercise in Python and Rust.\nHe called it \u0026ldquo;Heroes vs. Monsters\u0026rdquo;, and in CS 101 it was a simple text-based\nbattle. You could attack, you could heal, or you could do a special attack. The\nmonster would do the same. He made it more challenging in CS 201: now, there was\na dungeon, you had to fight your way to the end, and now you had a party of\nheroes fighting a group of monsters. Not a very complex game or project, but one\nI would enjoy recreating. I\u0026rsquo;ve even thought about giving a bit of a silly spin\nto make it something my kids could play.\u003c/p\u003e\n\u003cp\u003eWish me luck!\u003c/p\u003e\n\u003cp\u003eUntil next time,\u003c/p\u003e\n\u003cp\u003eCorbin\u003c/p\u003e\n","description":null,"image":null,"permalink":"https://cstaaben.github.io/blogs/and_so_it_begins/","title":"And so it begins..."}]